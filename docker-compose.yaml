
services:
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: appdb
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672" # Management UI
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s


  # otel-collector:
  #   image: otel/opentelemetry-collector:latest
  #   container_name: otel-collector
  #   ports:
  #     - "4317:4317"       # OTLP gRPC receiver
  #     - "4318:4318"       # OTLP HTTP receiver
  #   volumes:
  #     - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #   command: ["--config=/etc/otel-collector-config.yaml"]

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      COLLECTOR_OTLP_ENABLED: "true" # Enable OTLP receiver in Jaeger
    ports:
      - "16686:16686"     # Jaeger UI
      - "14268:14268"     # API for trace submission
      - "14250:14250"     # GRPC port
      - "9411:9411"       # Zipkin-compatible API
      - "4317:4317"     # OTLP gRPC receiver
      - "4318:4318"     # OTLP HTTP receiver

  migrate:
    image: migrate/migrate:latest
    container_name: migrate
    entrypoint: [
      "sh", "-c",
      "until nc -z db 5432; do echo waiting for database; sleep 2; done; migrate -path /migrations -database postgres://user:pass@db:5432/appdb?sslmode=disable up"
    ]
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./deployment/migrations:/migrations

  outbox-sidecar:
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: outbox-sidecar
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
      jaeger:
        condition: service_started

    environment:
      SIDECAR_DATABASE_TYPE: "postgres"
      SIDECAR_DATABASE_DSN: "host=db user=user password=pass dbname=appdb sslmode=disable"
      SIDECAR_BROKER_TYPE: "rabbitmq"
      SIDECAR_BROKER_URL: "amqp://guest:guest@rabbitmq:5672/"
      SIDECAR_POLL_INTERVAL: "5s"
      JAEGER_AGENT_HOST: "jaeger"
      JAEGER_AGENT_PORT: "6831"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://jaeger:4318"

volumes:
  postgres_data: